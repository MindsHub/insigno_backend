name: Rust

on:
  push:
    branches: [ "main" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-22.04
    steps:
    - uses: actions/checkout@v3
    - run: rustup toolchain install stable --profile minimal
    #- run: rustup override set nightly
    - name: Build
      run: cargo build --release
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{secrets.GITHUB_TOKEN}}
        file: target/release/insigno
        asset_name: insigno
        tag: ${{github.ref}}
        overwrite: true
        body: "Release file"
    - name: Kill Server
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{secrets.SSH_HOST}}
        username: ${{secrets.SSH_USER}}
        password: ${{secrets.SSH_PASS}}
        port: ${{secrets.SSH_PORT}} 
        script: |
          if pgrep insigno; then pkill insigno; fi
    - name: Copy exec via SSH
      uses: appleboy/scp-action@master
      with:
        host: ${{secrets.SSH_HOST}}
        username: ${{secrets.SSH_USER}}
        password: ${{secrets.SSH_PASS}}
        port: ${{secrets.SSH_PORT}}
        source: "target/release/insigno"
        target: "insigno"
        strip_components: 2
    - name: Copy exec via SSH
      uses: appleboy/scp-action@master
      with:
        host: ${{secrets.SSH_HOST}}
        username: ${{secrets.SSH_USER}}
        password: ${{secrets.SSH_PASS}}
        port: ${{secrets.SSH_PORT}}
        source: "templates/*"
        target: "insigno"
    - name: Re-run server
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{secrets.SSH_HOST}}
        username: ${{secrets.SSH_USER}}
        password: ${{secrets.SSH_PASS}}
        port: ${{secrets.SSH_PORT}}
        script: |
          cd insigno/
          nohup ./insigno > nohup.out 2> nohup.err < /dev/null &
  
  document:
    # Grant GITHUB_TOKEN the permissions required to make a Pages deployment
    permissions:
      pages: write      # to deploy to Pages
      id-token: write   # to verify the deployment originates from an appropriate source

    # Deploy to the github-pages environment
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    # Specify runner + deployment step
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - run: rustup toolchain install nightly --profile minimal
      - run: rustup override set nightly
      - name: Cache rust
        uses: Swatinem/rust-cache@v2.3.0
        with:
          cache-all-crates: "true"
          prefix-key: "v0-rust-doc"
          shared-key: "test"
          key: "test"
      - name: BuildDoc
        run: ./document
      - name: parse
        uses: actions/upload-pages-artifact@v1
        with:
          path: "docs"
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
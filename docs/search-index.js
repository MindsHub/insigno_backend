var searchIndex = JSON.parse('{\
"insignolib":{"doc":"Welcome to INSIGNO, an app for taking care of the …","t":"DDALLLLLOLLLLLLFLLFMMLLLLLLLLDLLALFFLLALALALLLAALDLLFFLLLLLLLLLLLLLLLLLLLDLLMLLLLLLLLLLFLMLLLLLLLLLDSSSSDLLLLLLLLLLLLLLLLLLLLLLLLLLFFFLLLLLLLLLLLLDLLFMLLLLLLLLLLLLLMMLLLLLLFLLLLEEEDILLLLLLLLLLLLLLLLLMLLLLLLLLLMLLLLLLLLLMLLLLLMMMMLLLLLLLLLLLLLLLLLLLLALLLLGGLRLLLLLALLALLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLLLLLLLLDLLLLLLLLLLLLLLDLLLLLLLLLDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLCCCCCCCIIIIIIKKKKKKKKKK","n":["InsignoConfig","TrashTypeMap","auth","borrow","borrow","borrow_mut","borrow_mut","deserialize","erase_tables","from","from","into","into","into_collection","into_collection","main","mapped","mapped","rocket","to_i64","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AutenticatedUserTest","borrow","borrow_mut","change_password","from","get_routes","get_user","into","into_collection","login","mapped","scrypt","serialize","signup","try_from","try_into","type_id","user","validation","vzip","ChangePasswordRequest","borrow","borrow_mut","change_password","complete_change_password","finalize","fmt_email","fmt_password","from","get_email","get_password","hash_password","init","into","into_collection","mapped","push_data","push_value","sanitize_email","sanitize_password","try_from","try_into","type_id","vzip","LoginInfo","borrow","borrow_mut","email","finalize","fmt_email","fmt_password","from","get_email","get_password","hash_password","init","into","into_collection","login","mapped","password","push_data","push_value","sanitize","sanitize_email","sanitize_password","try_from","try_into","type_id","vzip","Params","RECOMMENDED_LEN","RECOMMENDED_LOG_N","RECOMMENDED_P","RECOMMENDED_R","ScryptError","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","fmt","fmt","fmt","from","from","into","into","into_collection","into_collection","log_n","mapped","mapped","new","p","provide","r","recommended","scrypt","scrypt_check","scrypt_simple","to_owned","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","SignupInfo","borrow","borrow_mut","complete_registration","email","finalize","fmt_email","fmt_name","fmt_password","from","get_email","get_name","get_password","hash_password","init","into","into_collection","mapped","name","password","push_data","push_value","sanitize","sanitize_email","sanitize_name","sanitize_password","signup","try_from","try_into","type_id","vzip","Authenticated","AuthenticatedAdmin","Unauthenticated","User","UserType","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_hash","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","email","from","from","from","from","from_request","from_request","get_by_email","get_by_id","get_id","id","insert","into","into","into","into","into_collection","into_collection","into_collection","into_collection","is_admin","login","mapped","mapped","mapped","mapped","name","password_hash","phantom","points","serialize","serialize","set_token","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","users","vzip","vzip","vzip","vzip","BoxedQuery","SqlType","all_columns","all_columns","as_query","borrow","borrow_mut","clone","clone_into","columns","default_selection","distinct","dsl","except","except_all","execute","fmt","from","from_clause","internal_into_boxed","intersect","intersect_all","into","into_collection","into_update_target","join_target","limit","mapped","offset","primary_key","star","table","table","to_owned","try_from","try_into","type_id","union","union_all","values","values","vzip","walk_ast","with_lock","add","add","as_expression","as_expression","as_expression","as_expression","as_expression","as_expression","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","default","default","default","default","default","default","div","div","email","execute","execute","execute","execute","execute","execute","execute","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","id","into","into","into","into","into","into","into","into_collection","into_collection","into_collection","into_collection","into_collection","into_collection","into_collection","is_admin","mapped","mapped","mapped","mapped","mapped","mapped","mapped","mul","mul","name","password","points","star","sub","sub","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","walk_ast","email","id","is_admin","name","password","points","users","Email","Name","Password","SanitizeEmail","SanitizeName","SanitizePassword","fmt_email","fmt_name","fmt_password","get_email","get_name","get_password","hash_password","sanitize_email","sanitize_name","sanitize_password"],"q":[[0,"insignolib"],[29,"insignolib::auth"],[49,"insignolib::auth::change_password"],[73,"insignolib::auth::login"],[99,"insignolib::auth::scrypt"],[146,"insignolib::auth::signup"],[177,"insignolib::auth::user"],[254,"insignolib::auth::user::users"],[298,"insignolib::auth::user::users::columns"],[437,"insignolib::auth::user::users::dsl"],[444,"insignolib::auth::validation"]],"d":["here is where we store all our configuration needed at …","Wouldn’t be wonderful if we could have an easy struct …","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","here is where all the magic appens.calling this function …","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","The Scrypt parameter values.","Recommended Scrypt parameter <code>Key length</code>.","Recommended log₂ of the Scrypt parameter <code>N</code>: CPU/memory …","Recommended Scrypt parameter <code>p</code>: parallelism.","Recommended Scrypt parameter <code>r</code>: block size.","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","log₂ of the Scrypt parameter <code>N</code>, the work factor.","","","Create a new instance of <code>Params</code>.","<code>p</code> parameter: parallelization.","","<code>r</code> parameter: resource usage.","Recommended values sufficient for most use-cases","The scrypt key derivation function.","scrypt_check compares a password against the result of a …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","generic user interface for db (not authenticated)","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Helper type for representing a boxed query from this table","The SQL type of all of the columns on this table","","A tuple of all of the columns on this table","","","","","","Contains all of the columns of this table","","","Re-exports all of the columns of this table, as well as the","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Represents <code>table_name.*</code>, which is sometimes necessary for …","The actual table struct","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","Represents <code>table_name.*</code>, which is sometimes needed for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,77,2,77,2,2,0,77,2,77,2,77,2,0,77,2,0,77,77,77,2,77,2,77,2,77,2,0,16,16,0,16,0,0,16,16,0,16,0,16,0,16,16,16,0,0,16,0,18,18,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,33,33,33,33,33,33,33,33,33,33,33,33,33,0,33,33,33,33,33,33,33,33,33,33,33,0,23,23,23,23,0,23,35,23,35,23,35,23,35,23,23,35,35,23,35,23,35,23,35,23,23,35,23,23,35,23,23,0,0,0,23,35,35,23,23,35,23,35,23,35,23,35,0,49,49,0,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,0,49,49,49,49,0,0,0,0,0,13,50,51,14,13,50,51,14,14,13,50,51,14,13,50,51,14,14,13,50,51,14,14,14,14,14,14,14,14,13,50,51,14,13,50,51,14,14,14,13,50,51,14,14,14,14,14,14,14,14,13,50,51,14,13,50,51,14,13,50,51,14,13,50,51,14,14,0,13,50,51,14,0,0,55,0,55,55,55,55,55,0,55,55,0,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,0,55,55,55,55,55,55,55,55,55,55,55,55,70,72,70,73,74,75,76,72,65,70,73,74,75,76,72,65,70,73,74,75,76,72,65,70,73,74,75,76,72,65,70,73,74,75,76,72,70,73,74,75,76,72,70,72,0,65,70,73,74,75,76,72,65,70,73,74,75,76,72,65,70,73,74,75,76,72,0,65,70,73,74,75,76,72,65,70,73,74,75,76,72,0,65,70,73,74,75,76,72,70,72,0,0,0,0,70,72,65,70,73,74,75,76,72,65,70,73,74,75,76,72,65,70,73,74,75,76,72,65,70,73,74,75,76,72,65,70,73,74,75,76,72,65,70,73,74,75,76,72,0,0,0,0,0,0,0,0,0,0,0,0,0,78,79,80,81,82,83,80,78,79,80],"f":[0,0,0,[[]],[[]],[[]],[[]],[1,[[3,[2]]]],0,[[]],[[]],[[]],[[]],[[],[[5,[4]]]],[[],[[5,[4]]]],[[]],[6,[[5,[4]]]],[6,[[5,[4]]]],[[],[[8,[7]]]],0,0,[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,[[]],[[]],0,[[]],[[],[[11,[10]]]],0,[[]],[[],[[5,[4]]]],0,[6,[[5,[4]]]],0,[[16,17],3],0,[[],3],[[],3],[[],9],0,0,[[]],0,[[]],[[]],0,0,[[],[[3,[18,22]]]],[[]],[[]],[[]],[18,21],[18,21],[23,[[3,[[26,[24,25]]]]]],[27],[[]],[[],[[5,[4]]]],[6,[[5,[4]]]],0,[31],[[],[[3,[32]]]],[[],[[3,[32]]]],[[],3],[[],3],[[],9],[[]],0,[[]],[[]],0,[[],[[3,[33,22]]]],[[]],[[]],[[]],[33,21],[33,21],[23,[[3,[[26,[24,25]]]]]],[27],[[]],[[],[[5,[4]]]],0,[6,[[5,[4]]]],0,0,[31],[33,[[3,[0]]]],[[],[[3,[32]]]],[[],[[3,[32]]]],[[],3],[[],3],[[],9],[[]],0,0,0,0,0,0,[[]],[[]],[[]],[[]],[23,23],[35,35],[[]],[[]],[[],23],[[23,36],[[3,[37]]]],[[35,36],38],[[35,36],38],[[]],[[]],[[]],[[]],[[],[[5,[4]]]],[[],[[5,[4]]]],[23,39],[6,[[5,[4]]]],[6,[[5,[4]]]],[[39,40,40,41],[[3,[23,42]]]],[23,40],[43],[23,40],[[],23],[[[44,[39]],[44,[39]],23,[44,[39]]],[[3,[45]]]],[[32,32],[[3,[46,35]]]],[[32,23],[[3,[21,[26,[24]]]]]],[[]],[[]],[[],21],[[],3],[47,[[3,[23,48]]]],[[],3],[[],3],[[],3],[[],9],[[],9],[[]],[[]],0,[[]],[[]],0,0,[[],[[3,[49,22]]]],[[]],[[]],[[]],[[]],[49,21],[49,21],[49,21],[23,[[3,[[26,[24,25]]]]]],[27],[[]],[[],[[5,[4]]]],[6,[[5,[4]]]],0,0,0,[31],[49,[[3,[0]]]],[[],[[3,[32]]]],[[],[[3,[32]]]],[[],[[3,[32]]]],0,[[],3],[[],3],[[],9],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[14,[13]],32],46],[13,13],[50,50],[51,51],[[[14,[52]]],[[14,[52]]]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[53,[[30,[[26,[29]]]]]],[53,[[30,[[26,[29]]]]]],0,0,[[[14,[54]]],12],0,0,[[]],[[]],[[]],[[]],[[],[[5,[4]]]],[[],[[5,[4]]]],[[],[[5,[4]]]],[[],[[5,[4]]]],0,[[[14,[13]],32],[[3,[[14,[50]],0]]]],[6,[[5,[4]]]],[6,[[5,[4]]]],[6,[[5,[4]]]],[6,[[5,[4]]]],0,0,0,0,[[[14,[50]],17],3],[[[14,[13]],17],3],0,[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],0,0,[[]],[[]],[[]],[[]],0,0,[[]],0,[55],[[]],[[]],[55,55],[[]],0,[55],[[]],0,[56,[[59,[57,58]]]],[56,[[59,[57,60]]]],[[],[[3,[41,61]]]],[[55,36],38],[[]],[55],[[]],[56,[[59,[62,58]]]],[56,[[59,[62,60]]]],[[]],[[],[[5,[4]]]],[55,63],[64],[12],[6,[[5,[4]]]],[12],[55],[55,65],0,[[]],[[]],[[],3],[[],3],[[],9],[56,[[59,[66,58]]]],[56,[[59,[66,60]]]],[55],[55],[[]],[[55,[68,[67]]],69],[[]],[[70,71]],[[72,71]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[65,65],[70,70],[73,73],[74,74],[75,75],[76,76],[72,72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],70],[[],73],[[],74],[[],75],[[],76],[[],72],[[70,71]],[[72,71]],0,[[],[[3,[41,61]]]],[[],[[3,[41,61]]]],[[],[[3,[41,61]]]],[[],[[3,[41,61]]]],[[],[[3,[41,61]]]],[[],[[3,[41,61]]]],[[],[[3,[41,61]]]],[[65,36],38],[[70,36],38],[[73,36],38],[[74,36],38],[[75,36],38],[[76,36],38],[[72,36],38],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[4]]]],[[],[[5,[4]]]],[[],[[5,[4]]]],[[],[[5,[4]]]],[[],[[5,[4]]]],[[],[[5,[4]]]],[[],[[5,[4]]]],0,[6,[[5,[4]]]],[6,[[5,[4]]]],[6,[[5,[4]]]],[6,[[5,[4]]]],[6,[[5,[4]]]],[6,[[5,[4]]]],[6,[[5,[4]]]],[[70,71]],[[72,71]],0,0,0,0,[[70,71]],[[72,71]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],3],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[65,[68,[67]]],69],[[70,[68,[67]]],69],[[73,[68,[67]]],69],[[74,[68,[67]]],69],[[75,[68,[67]]],69],[[76,[68,[67]]],69],[[72,[68,[67]]],69],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[],21],[[],21],[[],21],[23,[[3,[[26,[24]]]]]],[[],[[3,[32]]]],[[],[[3,[32]]]],[[],[[3,[32]]]]],"c":[],"p":[[8,"Deserializer"],[3,"InsignoConfig"],[4,"Result"],[8,"Array"],[3,"SmallVec"],[8,"FnMut"],[4,"Build"],[3,"Rocket"],[3,"TypeId"],[3,"Route"],[3,"Vec"],[15,"i64"],[4,"Unauthenticated"],[3,"User"],[3,"Json"],[3,"AutenticatedUserTest"],[8,"Serializer"],[3,"ChangePasswordRequest"],[3,"Form"],[3,"State"],[3,"String"],[3,"Errors"],[3,"Params"],[8,"Error"],[3,"Global"],[3,"Box"],[3,"Options"],[3,"DataField"],[8,"Future"],[3,"Pin"],[3,"ValueField"],[15,"str"],[3,"LoginInfo"],[3,"CookieJar"],[3,"ScryptError"],[3,"Formatter"],[3,"Error"],[6,"Result"],[15,"u8"],[15,"u32"],[15,"usize"],[3,"InvalidParams"],[3,"Demand"],[15,"slice"],[3,"InvalidOutputLen"],[15,"bool"],[3,"PasswordHash"],[4,"Error"],[3,"SignupInfo"],[4,"Authenticated"],[4,"AuthenticatedAdmin"],[8,"Clone"],[3,"Request"],[8,"UserType"],[3,"table"],[8,"AsQuery"],[3,"Except"],[3,"Distinct"],[3,"CombinationClause"],[3,"All"],[4,"Error"],[3,"Intersect"],[3,"UpdateTarget"],[3,"OnClauseWrapper"],[3,"star"],[3,"Union"],[8,"Backend"],[3,"AstPass"],[6,"QueryResult"],[3,"id"],[8,"AsExpression"],[3,"points"],[3,"name"],[3,"email"],[3,"password"],[3,"is_admin"],[3,"TrashTypeMap"],[8,"SanitizeEmail"],[8,"SanitizeName"],[8,"SanitizePassword"],[8,"Email"],[8,"Name"],[8,"Password"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
